//=============================================================================
//
// リザルト画面処理 [result.cpp]
// Author : 
//
//=============================================================================
#include "result.h"
#include "input.h"
#include "texture.h"
#include "sprite.h"
#include "fade.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************


//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************


//*****************************************************************************
// グローバル変数
//*****************************************************************************


//=============================================================================
// 初期化処理
//=============================================================================
HRESULT Result::Init(void)
{

	switch (result_num)
	{
	case RESULT_WIN:
		rwin.RWinInit();
		rwin.SetStageNum(stage_num);
		break;
	case RESULT_LOSE:
		rlose.RLoseInit();
		rlose.SetStageNum(stage_num);
		break;
	default:
		break;
	}

	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void Result::Finalize(void)
{

}

//=============================================================================
// 更新処理
//=============================================================================
void Result::Update(void)
{
	if (GetKeyboardTrigger(DIK_RETURN) && GetFadeState() == FADE_NONE)
	{
		SceneTransition(SCENE_TITLE);
	}

	switch (result_num)
	{
	case RESULT_WIN:
		rwin.RWinUpdate();
		break;
	case RESULT_LOSE:
		rlose.RLoseUpdate();
		break;
	default:
		break;
	}
}

//=============================================================================
// 描画処理
//=============================================================================
void Result::Draw(void)
{
	// １枚のポリゴンの頂点とテクスチャ座標を設定

	switch (result_num)
	{
	case RESULT_WIN:
		rwin.RWinDraw();
		break;
	case RESULT_LOSE:
		rlose.RLoseDraw();
		break;
	default:
		break;
	}

}
