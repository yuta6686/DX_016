/*==============================================================================

   頂点管理 [player.cpp]
														 Author :
														 Date   :
--------------------------------------------------------------------------------

==============================================================================*/
#include "player.h"
#include "input.h"
#include "texture.h"
#include "sprite.h"
#include "bullet.h"
#include "score.h"


//*****************************************************************************
// マクロ定義
//*****************************************************************************


//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************


//*****************************************************************************
// グローバル変数
//*****************************************************************************
static PLAYER g_Player;


//=============================================================================
// 初期化処理
//=============================================================================
HRESULT InitPlayer(void)
{
	//テクスチャ読み込み
	g_Player.texNo = LoadTexture("data/TEXTURE/player.png");

	//初期化
	g_Player.pos.x = SCREEN_WIDTH / 2;
	g_Player.pos.y = 440;
	g_Player.w = 50.0f;
	g_Player.h = 50.0f;
	g_Player.use = true;

	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void UninitPlayer(void)
{

}

//=============================================================================
// 更新処理
//=============================================================================
void UpdatePlayer(void)
{
	if (GetKeyboardPress(DIK_UP))
		g_Player.pos.y -= 1.0f;

	if (GetKeyboardPress(DIK_DOWN))
		g_Player.pos.y += 1.0f;

	if (GetKeyboardPress(DIK_LEFT))
		g_Player.pos.x -= 1.0f;

	if (GetKeyboardPress(DIK_RIGHT))
		g_Player.pos.x += 1.0f;

	// 弾発射
	if (GetKeyboardTrigger(DIK_SPACE))
	{
		D3DXVECTOR2 pos = g_Player.pos;
		SetBullet(pos);		// １発目
		AddScore(123);
	}
}

//=============================================================================
// 描画処理
//=============================================================================
void DrawPlayer(void)
{
	DrawSprite(g_Player.texNo, g_Player.pos.x, g_Player.pos.y, g_Player.w, g_Player.h, 0.0f, 0.0f, 0.5f, 0.5f);
}

//=============================================================================
// プレイヤー構造体の先頭アドレスを取得
//=============================================================================
PLAYER *GetPlayer(void)
{
	return &g_Player;
}


